urban    = mydata$Urban,
year     = mydata$Year,
month    = mydata$Season,
sex      = mydata$Sex,
age      = mydata$Age,
edu      = mydata$Education,
job      = mydata$Occupation,
method   = mydata$method)
## Load Stan file
fileName <- "./logistic_regression_model.stan"
stan_code <- readChar(fileName, file.info(fileName)$size)
cat(stan_code)
# Run Stan
resStan <- stan(file = 'logistic_regression_model.stan',
data = dat,
chains = 3,
iter = 3000,
warmup = 500,
thin = 10)
# Show traceplot
traceplot(resStan, pars = c("beta"), inc_warmup = TRUE)
# Run Stan
resStan <- stan(file = 'logistic_regression_model.stan',
data = dat,
chains = 3,
iter = 3000,
warmup = 500,
thin = 10)
# Show traceplot
traceplot(resStan, pars = c("beta"), inc_warmup = TRUE)
rstan:::rstudio_stanc("logistic_regression_model.stan")
# Run Stan
resStan <- stan(file = 'logistic_regression_model.stan',
data = dat,
chains = 3,
iter = 3000,
warmup = 500,
thin = 10)
# Show traceplot
traceplot(resStan, pars = c("beta"), inc_warmup = TRUE)
c(t(mydata$Died))
length(c(t(mydata$Died)))
length(c(t(mydata$Died)))
nrow(mydata)
ncol(mydata)
ncol(mydata) - 2
## Create Stan data
dat <- list(N        = nrow(mydata),
p        = ncol(mydata) - 2,
died     = mydata$Died,
urban    = mydata$Urban,
year     = mydata$Year,
month    = mydata$Season,
sex      = mydata$Sex,
age      = mydata$Age,
edu      = mydata$Education,
job      = mydata$Occupation,
method   = mydata$method)
## Load Stan file
fileName <- "./logistic_regression_model.stan"
stan_code <- readChar(fileName, file.info(fileName)$size)
cat(stan_code)
# Run Stan
resStan <- stan(file = 'logistic_regression_model.stan',
data = dat,
chains = 3,
iter = 3000,
warmup = 500,
thin = 10)
# Show traceplot
traceplot(resStan, pars = c("beta"), inc_warmup = TRUE)
# This chunk just sets echo = TRUE as default (i.e. print all code)
knitr::opts_chunk$set(echo = TRUE, tidy = FALSE)
library(magrittr)
#library(XLConnect)
library(rstan)
library(nnet)
library(epitools)
library(aaltobda)
library(tinytex)
library(MASS)
library(mvtnorm)
library(ggplot2)
library(rstan)
library(devtools)
library(brms)
library(loo)
library(KernSmooth)
data <- read.csv("./suicide attempt data_2.csv", stringsAsFactors=FALSE)
mydata <- data
mydata$Season <- data$Month
mydata$Month = NULL
# Hospitalised
indexHosp   <- which(data$Hospitalised == 'yes')
indexNoHosp <- which(data$Hospitalised == 'no')
mydata$Hospitalised[indexHosp]   <- 1    # 1 --> yes
mydata$Hospitalised[indexNoHosp] <- 0    # 0 --> no
# Died
indexDied   <- which(data$Died == 'yes')
indexNoDied <- which(data$Died == 'no')
mydata$Died[indexDied]   <- 1    # 1 --> yes
mydata$Died[indexNoDied] <- 0    # 0 --> no
# Urban
indexUrban   <- which(data$Urban == 'yes')
indexNoUrban <- which(data$Urban == 'no')
mydata$Urban[indexUrban]   <- 1    # 1 --> yes
mydata$Urban[indexNoUrban] <- 0    # 0 --> no
# Season
indexSpring <- which(data$Month >= 3 & data$Month <= 5)
indexSummer <- which(data$Month >= 6 & data$Month <= 8)
indexAutumn <- which(data$Month >= 9 & data$Month <= 11)
indexWinter <- which(data$Month == 12 | data$Month <= 2)
mydata$Season[indexSpring] <- 1  # 1 --> Spring
mydata$Season[indexSummer] <- 2  # 2 --> Summer
mydata$Season[indexAutumn] <- 3  # 3 --> Autumn
mydata$Season[indexWinter] <- 4  # 4 --> Winter
# Sex
indexMale   <- which(data$Sex == 'male')
indexFemale <- which(data$Sex == 'female')
mydata$Sex[indexMale]   <- 1    # 1 --> male
mydata$Sex[indexFemale] <- 0    # 0 --> female
# Age
indexAgeOne   <- which(data$Age <= 34)
indexAgeTwo   <- which(data$Age >= 35 & data$Age <= 49)
indexAgeThree <- which(data$Age >= 50 & data$Age <= 64)
indexAgeFour  <- which(data$Age >= 65)
mydata$Age[indexAgeOne]   <- 1   # 1 --> <34
mydata$Age[indexAgeTwo]   <- 2   # 2 --> 35-49
mydata$Age[indexAgeThree] <- 3   # 3 --> 50-64
mydata$Age[indexAgeFour]  <- 4   # 4 --> >65
# Education
indexEduZero  <- which(data$Education == 'iliterate')
indexEduOne   <- which(data$Education == 'primary')
indexEduTwo   <- which(data$Education == 'Secondary')
indexEduThree <- which(data$Education == 'Tertiary')
mydata$Education[indexEduZero]   <- 0   # 0 --> iliterate
mydata$Education[indexEduOne]   <- 1   # 1 --> primary
mydata$Education[indexEduTwo] <- 2   # 2 --> Secondary
mydata$Education[indexEduThree]  <- 3   # 3 --> Tertiary
# Occupation
indexFarm   <- which(data$Occupation == 'farming')
indexNoFarm <- which(data$Occupation != 'farming')
mydata$Occupation[indexFarm]   <- 1    # 1 --> farming
mydata$Occupation[indexNoFarm] <- 0    # 0 --> non farming
# Method
indexPesticide <- which(data$method == 'Pesticide')
indexPoison    <- which(data$method == 'Other poison')
indexHanging    <- which(data$method == 'hanging')
indexOthers    <- which(data$method != 'Pesticide' &
data$method != 'Other poison' &
data$method != 'hanging')
mydata$method[indexPesticide] <- 1 # 1 --> Pesticide
mydata$method[indexPoison]    <- 2 # 2 --> Other poison
mydata$method[indexHanging]   <- 3 # 3 --> hanging
mydata$method[indexOthers]    <- 4 # 4 --> All others
rural_men   <- subset(data, data$Sex=="male" & data$Urban=="no")
rural_women <- subset(data, data$Sex=="female" & data$Urban=="no")
urban_men   <- subset(data, data$Sex=="male" & data$Urban=="yes")
urban_women <- subset(data, data$Sex=="female" & data$Urban=="yes")
str(data)
## Remove unknown labels
indexUnknw1 <- which(mydata$Education == 'unknown')
mydata <- mydata[-indexUnknw1,]
indexUnkn <- which(mydata$Urban == 'unknown')
mydata <- mydata[-indexUnkn,]
ncol(mydata) - 2
## Create Stan data
dat <- list(N        = nrow(mydata),
p        = ncol(mydata) - 2,
died     = c(t(mydata$Died)),
urban    = c(t(mydata$Urban)),
year     = c(t(mydata$Year)),
month    = c(t(mydata$Season)),
sex      = c(t(mydata$Sex)),
age      = c(t(mydata$Age)),
edu      = c(t(mydata$Education)),
job      = c(t(mydata$Occupation)),
method   = c(t(mydata$method)))
## Load Stan file
fileName <- "./logistic_regression_model.stan"
stan_code <- readChar(fileName, file.info(fileName)$size)
cat(stan_code)
# Run Stan
resStan <- stan(file = 'logistic_regression_model.stan',
data = dat,
chains = 3,
iter = 3000,
warmup = 500)
# Show traceplot
traceplot(resStan, pars = c("beta"), inc_warmup = TRUE)
## Create Stan data
dat <- list(N        = nrow(mydata),
p        = ncol(mydata) - 2,
died     = mydata$Died,
urban    = mydata$Urban,
year     = mydata$Year,
season   = mydata$Season,
sex      = mydata$Sex,
age      = mydata$Age,
edu      = mydata$Education,
job      = mydata$Occupation,
method   = mydata$method)
## Load Stan file
fileName <- "./logistic_regression_model.stan"
stan_code <- readChar(fileName, file.info(fileName)$size)
cat(stan_code)
# Run Stan
resStan <- stan(file = 'logistic_regression_model.stan',
data = dat,
chains = 3,
iter = 3000,
warmup = 500)
# Show traceplot
traceplot(resStan, pars = c("beta"), inc_warmup = TRUE)
## Create Stan data
dat <- list(N        = nrow(mydata),
p        = ncol(mydata) - 2,
died     = c(t(mydata$Died)),
urban    = c(t(mydata$Urban)),
year     = c(t(mydata$Year)),
month    = c(t(mydata$Season)),
sex      = c(t(mydata$Sex)),
age      = c(t(mydata$Age)),
edu      = c(t(mydata$Education)),
job      = c(t(mydata$Occupation)),
method   = c(t(mydata$method))
## Load Stan file
fileName <- "./logistic_regression_model.stan"
## Create Stan data
dat <- list(N        = nrow(mydata),
p        = ncol(mydata) - 2,
died     = c(t(mydata$Died)),
urban    = c(t(mydata$Urban)),
year     = c(t(mydata$Year)),
month    = c(t(mydata$Season)),
sex      = c(t(mydata$Sex)),
age      = c(t(mydata$Age)),
edu      = c(t(mydata$Education)),
job      = c(t(mydata$Occupation)),
method   = c(t(mydata$method)))
## Load Stan file
fileName <- "./logistic_regression_model.stan"
stan_code <- readChar(fileName, file.info(fileName)$size)
cat(stan_code)
# Run Stan
resStan <- stan(file = 'logistic_regression_model.stan',
data = dat,
chains = 3,
iter = 3000,
warmup = 500)
# Show traceplot
traceplot(resStan, pars = c("beta"), inc_warmup = TRUE)
## Create Stan data
dat <- list(N        = nrow(mydata),
p        = ncol(mydata) - 2,
died     = mydata$Died,
urban    = mydata$Urban,
year     = mydata$Year,
season   = mydata$Season,
sex      = mydata$Sex,
age      = mydata$Age,
edu      = mydata$Education,
job      = mydata$Occupation,
method   = mydata$method)
## Load Stan file
fileName <- "./logistic_regression_model.stan"
stan_code <- readChar(fileName, file.info(fileName)$size)
cat(stan_code)
# Run Stan
resStan <- stan(file = 'logistic_regression_model.stan',
data = dat,
chains = 3,
iter = 3000,
warmup = 500)
# Show traceplot
traceplot(resStan, pars = c("beta"), inc_warmup = TRUE)
# This chunk just sets echo = TRUE as default (i.e. print all code)
knitr::opts_chunk$set(echo = TRUE, tidy = FALSE)
library(magrittr)
#library(XLConnect)
library(rstan)
library(nnet)
library(epitools)
library(aaltobda)
library(tinytex)
library(MASS)
library(mvtnorm)
library(ggplot2)
library(rstan)
library(devtools)
library(brms)
library(loo)
library(KernSmooth)
data <- read.csv("./suicide attempt data_2.csv", stringsAsFactors=FALSE)
mydata <- data
mydata$Season <- data$Month
mydata$Month = NULL
# Hospitalised
indexHosp   <- which(data$Hospitalised == 'yes')
indexNoHosp <- which(data$Hospitalised == 'no')
mydata$Hospitalised[indexHosp]   <- 1    # 1 --> yes
mydata$Hospitalised[indexNoHosp] <- 0    # 0 --> no
# Died
indexDied   <- which(data$Died == 'yes')
indexNoDied <- which(data$Died == 'no')
mydata$Died[indexDied]   <- 1    # 1 --> yes
mydata$Died[indexNoDied] <- 0    # 0 --> no
# Urban
indexUrban   <- which(data$Urban == 'yes')
indexNoUrban <- which(data$Urban == 'no')
mydata$Urban[indexUrban]   <- 1    # 1 --> yes
mydata$Urban[indexNoUrban] <- 0    # 0 --> no
# Season
indexSpring <- which(data$Month >= 3 & data$Month <= 5)
indexSummer <- which(data$Month >= 6 & data$Month <= 8)
indexAutumn <- which(data$Month >= 9 & data$Month <= 11)
indexWinter <- which(data$Month == 12 | data$Month <= 2)
mydata$Season[indexSpring] <- 1  # 1 --> Spring
mydata$Season[indexSummer] <- 2  # 2 --> Summer
mydata$Season[indexAutumn] <- 3  # 3 --> Autumn
mydata$Season[indexWinter] <- 4  # 4 --> Winter
# Sex
indexMale   <- which(data$Sex == 'male')
indexFemale <- which(data$Sex == 'female')
mydata$Sex[indexMale]   <- 1    # 1 --> male
mydata$Sex[indexFemale] <- 0    # 0 --> female
# Age
indexAgeOne   <- which(data$Age <= 34)
indexAgeTwo   <- which(data$Age >= 35 & data$Age <= 49)
indexAgeThree <- which(data$Age >= 50 & data$Age <= 64)
indexAgeFour  <- which(data$Age >= 65)
mydata$Age[indexAgeOne]   <- 1   # 1 --> <34
mydata$Age[indexAgeTwo]   <- 2   # 2 --> 35-49
mydata$Age[indexAgeThree] <- 3   # 3 --> 50-64
mydata$Age[indexAgeFour]  <- 4   # 4 --> >65
# Education
indexEduZero  <- which(data$Education == 'iliterate')
indexEduOne   <- which(data$Education == 'primary')
indexEduTwo   <- which(data$Education == 'Secondary')
indexEduThree <- which(data$Education == 'Tertiary')
mydata$Education[indexEduZero]   <- 0   # 0 --> iliterate
mydata$Education[indexEduOne]   <- 1   # 1 --> primary
mydata$Education[indexEduTwo] <- 2   # 2 --> Secondary
mydata$Education[indexEduThree]  <- 3   # 3 --> Tertiary
# Occupation
indexFarm   <- which(data$Occupation == 'farming')
indexNoFarm <- which(data$Occupation != 'farming')
mydata$Occupation[indexFarm]   <- 1    # 1 --> farming
mydata$Occupation[indexNoFarm] <- 0    # 0 --> non farming
# Method
indexPesticide <- which(data$method == 'Pesticide')
indexPoison    <- which(data$method == 'Other poison')
indexHanging    <- which(data$method == 'hanging')
indexOthers    <- which(data$method != 'Pesticide' &
data$method != 'Other poison' &
data$method != 'hanging')
mydata$method[indexPesticide] <- 1 # 1 --> Pesticide
mydata$method[indexPoison]    <- 2 # 2 --> Other poison
mydata$method[indexHanging]   <- 3 # 3 --> hanging
mydata$method[indexOthers]    <- 4 # 4 --> All others
rural_men   <- subset(data, data$Sex=="male" & data$Urban=="no")
rural_women <- subset(data, data$Sex=="female" & data$Urban=="no")
urban_men   <- subset(data, data$Sex=="male" & data$Urban=="yes")
urban_women <- subset(data, data$Sex=="female" & data$Urban=="yes")
str(data)
## Remove unknown labels
indexUnknw1 <- which(mydata$Education == 'unknown')
mydata <- mydata[-indexUnknw1,]
indexUnkn <- which(mydata$Urban == 'unknown')
mydata <- mydata[-indexUnkn,]
ncol(mydata) - 2
## Create Stan data
dat <- list(N        = nrow(mydata),
p        = ncol(mydata) - 2,
died     = mydata$Died,
urban    = mydata$Urban,
year     = mydata$Year,
season   = mydata$Season,
sex      = mydata$Sex,
age      = mydata$Age,
edu      = mydata$Education,
job      = mydata$Occupation,
method   = mydata$method)
## Load Stan file
fileName <- "./logistic_regression_model.stan"
stan_code <- readChar(fileName, file.info(fileName)$size)
cat(stan_code)
# Run Stan
resStan <- stan(file = 'logistic_regression_model.stan',
data = dat,
chains = 3,
iter = 3000,
warmup = 500)
# Show traceplot
traceplot(resStan, pars = c("beta"), inc_warmup = TRUE)
ncol(mydata) - 2
mydata$Died
ncol(mydata) - 2
typeof(mydata$Died[10])
ncol(mydata) - 2
as.numeric(mydata$Died)
typeof(mydata$Died[10])
## Create Stan data
dat <- list(N        = nrow(mydata),
p        = ncol(mydata) - 2,
died     = as.numeric(mydata$Died),
urban    = as.numeric(mydata$Urban),
year     = as.numeric(mydata$Year),
season   = as.numeric(mydata$Season),
sex      = as.numeric(mydata$Sex),
age      = as.numeric(mydata$Age),
edu      = as.numeric(mydata$Education),
job      = as.numeric(mydata$Occupation),
method   = as.numeric(mydata$method))
## Load Stan file
fileName <- "./logistic_regression_model.stan"
stan_code <- readChar(fileName, file.info(fileName)$size)
cat(stan_code)
# Run Stan
resStan <- stan(file = 'logistic_regression_model.stan',
data = dat,
chains = 3,
iter = 3000,
warmup = 500)
# Run Stan
resStan <- stan(file = 'logistic_regression_model.stan',
data = dat,
chains = 1,
iter = 1000,
warmup = 500)
# Show traceplot
traceplot(resStan, pars = c("beta"), inc_warmup = TRUE)
# Run Stan
resStan <- stan(file = 'logistic_regression_model.stan',
data = dat,
chains = 1,
iter = 1000,
warmup = 500)
print(resStan)
# Show traceplot
traceplot(resStan, pars = c("beta"), inc_warmup = TRUE)
print(resStan)
# Show traceplot
traceplot(resStan, pars = c("beta"), inc_warmup = TRUE)
# Show traceplot
traceplot(resStan, pars = c("beta"), inc_warmup = TRUE)
# Run Stan
resStan <- stan(file = 'logistic_regression_model.stan',
data = dat,
chains = 3,
iter = 1000,
warmup = 500)
# Show traceplot
traceplot(resStan, pars = c("beta"), inc_warmup = TRUE)
# Run Stan
resStan <- stan(file = 'logistic_regression_model.stan',
data = dat,
chains = 3,
iter = 1000,
warmup = 500,
thin = 10,
seed = 345)
# Show traceplot
traceplot(resStan, pars = c("beta"), inc_warmup = TRUE)
outcomeModel <- glm(died ~ urban + year + season + sex + age + edu + job + method, data = mydata,
family = binomial(link = "logit"))
outcomeModel <- glm(Died ~ Urban + Year + Season + Sex + Age + Education + Occupation + method, data = mydata,
family = binomial(link = "logit"))
outcomeModel <- glm(Died ~ Urban + Year + Season + Sex + Age + Education + Occupation + method, data = mydata,
family = binomial(link = "logit"))
## Bayesian
print(resStan, pars = c("beta"))
## Frequentist
tableone::ShowRegTable(outcomeModel, exp = FALSE)
outcomeModel <- glm(as.numeric(Died) ~ as.numeric(Urban) +
as.numeric(Year) +
as.numeric(Season) +
as.numeric(Sex) +
as.numeric(Age) +
as.numeric(Education) +
as.numeric(Occupation) +
as.numeric(method), data = mydata,
family = binomial(link = "logit"))
summary(outcomeModel)
## Bayesian
print(resStan, pars = c("beta"))
## Frequentist
tableone::ShowRegTable(outcomeModel, exp = FALSE)
install.packages("tableone")
# This chunk just sets echo = TRUE as default (i.e. print all code)
knitr::opts_chunk$set(echo = TRUE, tidy = FALSE)
library(magrittr)
#library(XLConnect)
library(rstan)
library(nnet)
library(epitools)
library(aaltobda)
library(tinytex)
library(MASS)
library(mvtnorm)
library(ggplot2)
library(rstan)
library(devtools)
library(brms)
library(loo)
library(KernSmooth)
library(tableone)
data <- read.csv("./suicide attempt data_2.csv", stringsAsFactors=FALSE)
## Bayesian
print(resStan, pars = c("beta"))
## Frequentist
tableone::ShowRegTable(outcomeModel, exp = FALSE)
